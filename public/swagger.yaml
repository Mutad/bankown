openapi: 3.0.0
info:
  version: 1.0.0
  title: Bankown API
  description: Bankown
servers:
  - url: https://bankown.mutad.ml/api
    description: Production server
  - url: https://192.168.0.1
    description: Local server

paths:
  /status:
    get:
      tags:
        - server
      operationId: GetServerStatus
      summary: Get the current server status
      description: Returns server status

      responses:
        "200":
          description: Server status is ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/serverResponse"
              example: { "message": "ok" }

  /auth/login:
    post:
      tags:
        - authentication
      operationId: Login
      summary: Login endpoint
      description: Login by email and password

      requestBody:
        description: Auth fields
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authFields"
            example: { "email": "mutado.nzr@gmail.com", "password": "12345678" }

      responses:
        "200":
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authResponse"

        "422":
          description: Validation error
        "401":
          description: Wrong login or password

        "default":
          description: Error
  /auth/register:
    post:
      tags:
        - authentication
      operationId: Register
      summary: Register endpoint
      description: Register a new user

      requestBody:
        description: New User data
        required: true
        content:
          application/json:
            schema:
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                country:
                  type: string
                birth_date:
                  type: string
                email:
                  type: string
                  description: email of this user
                password:
                  type: string
                password_repeat:
                  type: string
            example:
              {
                "first_name": "Nazar",
                "last_name": "Potipaka",
                "country": "United States",
                "birth_date": "11/09/2002",
                "email": "mutado.nzr@gmail.com",
                "password": "12345678",
                "password_repeat": "12345678",
              }

      responses:
        "201":
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authResponse"
        "422":
          description: Validation error

  /auth/user:
    get:
      tags:
        - authentication
      summary: Get authenticated user
      operationId: getUser

      security:
        - bearerAuth: []

      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "401":
          description: Unauthenticated

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    serverResponse:
      type: object
      properties:
        message:
          type: string
    authFields:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    user:
      type: object
      properties:
        id:
          type: integer
          description: unique id of user
        first_name:
          type: string
        last_name:
          type: string
        country:
          type: string
        birth_date:
          type: string
        email:
          type: string
          description: email of this user
    authResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Personal Access Token
        token_type:
          type: string
          description: Type of Personal Access Token
        expires_at:
          type: string
          description: Time of Token expiration
        user:
          $ref: "#/components/schemas/user"
